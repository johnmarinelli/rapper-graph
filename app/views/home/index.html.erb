<head>

<style>
.chart div{
  font: 10px sans-serif;
  background-color: steelblue;
  text-align: right;
  padding: 3px;
  margin: 1px;
  color: white;
}

.axis path,
.axis line{
  fill: none;
  stroke: black;
  shape-rendering: crispEdges;
}

.axis text{
  font-family: sans-serif;
  font-size: 11px;
}
</style>

</head>
<body>
  <h1>Home#index</h1>
  <p>Rappers and stuff.</p>

  <% @rappers.each do |rapper| %>
    <%= rapper.name %><br/>
  <% end %>

  <div class="chart">
  </div>
<script>
function getElementsFromString(list, delim){
  return list.split(delim);
}

function Rapper(name, year){
  this.mName = name;
  this.mYear = year;
  this.mBeef = [];
  this.mInfluenced = [];
  this.mCollaborated = [];
  
  this.mPresence = 0;
}

Rapper.prototype = {
  setBeef: function(beefWith){
    this.mBeef.push(beefWith);
  },
  
  setInfluenced: function(influenced){
    this.mInfluenced.push(influenced);
  },

  setCollaborated: function(collaborater){
    this.mCollaborated.push(collaborater);
  },

  setPresence: function(){
    this.mPresence = this.mBeef.length + this.mInfluenced.length + this.mCollaborated.length;
  },
};

var rapperArray = [];

<% @rappers.each do |rapper| %>
  var r = JSON.parse('<%= j(rapper.to_json).html_safe %>');
  var rapper = new Rapper(r.name, r.year);
  
  if(r.beef){
    var beefList = getElementsFromString(r.beef, ',');
    for(var b in beefList){
      rapper.setBeef(beefList[b]);
    }
  }

  if(r.influenced){
    var influenceList = getElementsFromString(r.influenced, ',');
    for(var i in influenceList){
      rapper.setInfluenced(influenceList[i]);
    }
  }

  if(r.collaborated){
    var collabList = getElementsFromString(r.collaborated, ',');
    for(var c in collabList){
      rapper.setCollaborated(collabList[c]);
    }
  }

  rapper.setPresence();

  rapperArray.push(rapper);
<% end %>
</script>

<script src="http://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<script>
var maxAvatarRadius =  25;
var width = 500;
var height = 500;

var svg = d3.select("body")
			.append("svg")
			.attr("width", width + "px")
			.attr("height", height + "px");

var circles = svg.selectAll("circle")
			     .data(rapperArray)
			     .enter()
   			     .append("circle");
  
var xDomain = getExtremes(rapperArray, 'mYear');
var xScale = d3.scale.linear()
					 .domain([xDomain[0], xDomain[1]])
					 .range([maxAvatarRadius, width - maxAvatarRadius]);var xAxis = d3.svg.axis()
				  .scale(xScale)
				  .orient("bottom")
				  .ticks(5);
svg.append("g")
   .attr("class", "axis")
   .attr("transform", "translate(0," + (height - maxAvatarRadius) + ")")
   .call(xAxis);

var yDomain = getExtremes(rapperArray, 'mPresence');
var yScale = d3.scale.linear()
					 .domain([yDomain[0], yDomain[1]])
					 .range([maxAvatarRadius, height - maxAvatarRadius]);

var rDomain = getExtremes(rapperArray, 'mPresence');
var rScale = d3.scale.linear()
					 .domain([rDomain[0], rDomain[1]])
					 .range([maxAvatarRadius * .25, maxAvatarRadius]);

//'d' is the actual data, 'i' is the index
//cx: function of year
//cy: random; make sure it doesn't overlap w/ other nodes
//    or, could be a function of presence score like 'r'
//	  lower on graph means lower presence
//r:  function of presence score that's calculated using influenced, beef, and collaborated attributes
circles.attr("cx", function(d, i){
			  return xScale(d.mYear);
			})
	   .attr("cy", function(d, i){
	   		  return yScale(d.mPresence);
			})
	   .attr("r", function(d, i){
	   		  return rScale(d.mPresence);
	   		}); 

</script>
</body>
